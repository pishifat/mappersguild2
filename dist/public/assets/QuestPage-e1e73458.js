import{d as b,_,o as i,e as o,i as p,w as I,F as k,r as M,t as f,a as t,q as u,m as v,y as T,j as m,Q as B,z as q,n as Q,c as w,l as R,b as g,s as A,f as W,g as N,v as G,k as c,M as J,E as z,G as H,H as K,I as Y,A as E,u as X,x as Z,J as x,K as C,L as D}from"./index-bfcac3d0.js";import{F as ee}from"./FilterBox-959ba203.js";import{M as se,F as O}from"./extras-98c99391.js";import{F as te}from"./FormTextarea-603e4b1d.js";import{S as ie}from"./SubmitQuestModal-3251196d.js";import{A as oe}from"./AssociatedBeatmaps-2d4f0d73.js";import{M as re}from"./ModalDialog-87d72c23.js";const ae=b({name:"ArtistFilters",components:{FormSelect:te},props:{isLoading:Boolean,filterArtist:{type:String,default:""}},emits:["update:filterArtist"],data(){return{featuredArtists:[],selectedArtist:""}},watch:{selectedArtist(){}},async created(){const e=await this.$http.executeGet("/featuredArtists");e&&(this.featuredArtists=e.sort((s,a)=>s.label.toLowerCase()>a.label.toLowerCase()?1:a.label.toLowerCase()>s.label.toLowerCase()?-1:0))},methods:{}}),ne={class:"row mt-3"},de=t("option",{value:"-",disabled:""}," --- ",-1),le=t("option",{value:"none"}," No specific artist ",-1),ue=t("option",{value:"user"}," User-submitted quests ",-1),pe=t("option",{value:"-",disabled:""}," --- ",-1),ce=t("option",{value:"-",disabled:""}," Jump to an artist by typing their name! ",-1),me=t("option",{value:"-",disabled:""}," --- ",-1),he=["value"];function fe(e,s,a,d,h,y){const l=u("form-select");return i(),o("div",ne,[p(l,{modelValue:e.selectedArtist,"onUpdate:modelValue":s[0]||(s[0]=r=>e.selectedArtist=r),label:"Artist",placeholder:"Any","auto-columns":!0,onChange:s[1]||(s[1]=r=>e.$emit("update:filterArtist",e.selectedArtist))},{default:I(()=>[de,le,ue,pe,ce,me,(i(!0),o(k,null,M(e.featuredArtists,r=>(i(),o("option",{key:r.id,value:r.osuId},f(r.label),9,he))),128))]),_:1},8,["modelValue"])])}const ye=_(ae,[["render",fe]]),$e=b({components:{FilterBox:ee,ModeFilters:se,ArtistFilters:ye},computed:{...v(["loggedInUser"]),...v("quests",["filterMode","filterArtist"])},methods:{...T("quests",["updateFilterValue","updateFilterMode","updateFilterArtist","searchQuests"]),filterByMode(e){this.updateFilterMode(e),this.searchQuests()},filterByArtist(e){this.updateFilterArtist(e),this.searchQuests()}}}),be={class:"container card card-body py-3 mb-2"},_e=t("button",{class:"btn btn-primary","data-bs-toggle":"modal","data-bs-target":"#submitQuest"},[m(" Submit quest for approval "),t("i",{class:"fas fa-plus fa-xs"})],-1);function ge(e,s,a,d,h,y){const l=u("mode-filters"),r=u("artist-filters"),n=u("filter-box");return i(),o("div",be,[p(n,{placeholder:"enter to search for quest...","onUpdate:filterValue":s[2]||(s[2]=$=>e.updateFilterValue($))},{filters:I(()=>[p(l,{"filter-mode":e.filterMode,"onUpdate:filterMode":s[0]||(s[0]=$=>e.filterByMode($))},null,8,["filter-mode"]),p(r,{"filter-artist":e.filterArtist,"onUpdate:filterArtist":s[1]||(s[1]=$=>e.filterByArtist($))},null,8,["filter-artist"])]),default:I(()=>[_e]),_:1})])}const qe=_($e,[["render",ge]]),ve=b({components:{QuestCard:B},props:{status:{type:String,required:!0},quests:{type:Array,required:!0}},data(){return{collapsed:!1}},computed:{...v("quests",["isLoadingQuests","isFirstLoadDone"]),questCount(){return this.openQuests&&!this.isFirstLoadDone||!this.isLoadingQuests?this.quests.length.toString():"..."},openQuests(){return this.status==="Open"}},methods:{...T("quests",["searchQuests"]),showAll(){this.searchQuests(!0)}}}),ke={class:"container card card-body my-2"},Qe=["href"],we=["id"],Pe={class:"col-sm"},Ie={class:"text-center"},Me=["disabled"],Ae=t("i",{class:"fas fa-angle-down me-1"},null,-1),Le=t("i",{class:"fas fa-angle-down ms-1"},null,-1);function Ue(e,s,a,d,h,y){const l=u("quest-card"),r=A("bs-tooltip");return i(),o("div",ke,[t("h5",{class:Q(e.collapsed?"mb-0":"mb-2")},[t("a",{href:"#"+e.status,"data-bs-toggle":"collapse",onClick:s[0]||(s[0]=q(n=>e.collapsed=!e.collapsed,["prevent"]))},[m(f(e.status)+" quests ("+f(e.questCount)+") ",1),t("i",{class:Q(["fas",e.collapsed?"fa-angle-up":"fa-angle-down"])},null,2)],8,Qe)],2),t("div",{id:e.status,class:Q(["row show",{"loading-data":e.isLoadingQuests&&e.isFirstLoadDone}])},[t("div",Pe,[p(R,{name:"list",tag:"div"},{default:I(()=>[(i(!0),o(k,null,M(e.quests,n=>(i(),w(l,{key:n.id,quest:n},null,8,["quest"]))),128))]),_:1})]),t("div",Ie,[g((i(),o("button",{class:"btn btn-sm btn-primary",type:"button",disabled:e.isLoadingQuests,onClick:s[1]||(s[1]=n=>e.showAll())},[Ae,m(" show all quests "),Le],8,Me)),[[r,"this can take a few seconds. searching for a specific artist is probably better"]])])],10,we)])}const Fe=_(ve,[["render",Ue]]),Ce=b({name:"LeaderActions",props:{party:{type:Object,required:!0},status:{type:String,required:!0},quest:{type:Object,required:!0},price:{type:Number,required:!0}},data(){return{addUsername:"",dropdownUserId:""}},computed:{...v(["loggedInUser"]),enoughPoints(){let e=0;return this.party.members.forEach(s=>{s.availablePoints<this.price&&e++}),!(e&&this.loggedInUser.availablePoints<this.price*e)}},methods:{async togglePartyLock(e){const s=await this.$http.executePost(`/parties/${this.party.id}/toggleLock`,{},e);this.$http.isError(s)||this.$store.dispatch("quests/updateParty",s)},async addToParty(e){const s=await this.$http.executePost(`/parties/${this.party.id}/add`,{user:this.addUsername},e);this.$http.isError(s)||(this.$store.dispatch("quests/updateParty",s),this.$store.dispatch("updateToastMessages",{message:"Added",type:"success"}))},async transferPartyLeader(e){if(!this.dropdownUserId){this.$store.dispatch("updateToastMessages",{message:"Select a member to transfer leadership!",type:"info"});return}const s=await this.$http.executePost(`/parties/${this.party.id}/transferLeadership`,{userId:this.dropdownUserId},e);this.$http.isError(s)||this.$store.dispatch("quests/updateParty",s)},async kickPartyMember(e){if(!this.dropdownUserId){this.$store.dispatch("updateToastMessages",{message:"Select a member to kick :(",type:"info"});return}if(confirm(`Are you sure? ${this.party.members.length==this.quest.minParty&&this.quest.status=="wip"?"This party has the minimum required members to run the quest, so kicking will cause the quest to be dropped.":""}`)){const s=await this.$http.executePost(`/parties/${this.party.id}/kick`,{userId:this.dropdownUserId},e);this.$http.isError(s)||(this.$store.dispatch("quests/updateParty",s),this.quest.status=="wip"&&(s.members.length<this.quest.minParty||s.rank<this.quest.minRank)&&this.dropQuest(e))}},async extendDeadline(e){if(confirm(`Are you sure?

All members of your party will spend 10 points.

You have ${this.loggedInUser.availablePoints} points available.`)){const s=await this.$http.executePost(`/quests/${this.quest.id}/extendDeadline`,{},e);this.$http.isError(s)||(this.$store.dispatch("quests/updateQuest",s.quest),this.$store.commit("setAvailablePoints",s.availablePoints))}},async dropQuest(e){if(confirm("Are you sure?")){const s=await this.$http.executePost(`/quests/${this.quest.id}/drop`,{},e);this.$http.isError(s)||(this.$bs.hideModal("editQuest"),this.$store.dispatch("quests/setQuests",s))}},async acceptQuest(e){const s=this.party.modes;let a="";for(let d=0;d<s.length;d++)a+=s[d],d<s.length-1&&(a+=", ");if(confirm(`Are you sure?

This quest will only allow beatmaps of these modes: ${a}

All members of your party will spend ${this.price} points. If any members of your party don't have enough points, your available points will be subtracted instead.

You have ${this.loggedInUser.availablePoints} points available.`)){const d=await this.$http.executePost(`/quests/${this.quest.id}/accept`,{},e);this.$http.isError(d)||(this.$store.dispatch("quests/setQuests",d.quests),this.$store.commit("setAvailablePoints",d.availablePoints),this.$bs.hideModal("editQuest"))}},async deleteParty(e){if(confirm("Are you sure?")){const s=await this.$http.executePost(`/parties/${this.party.id}/delete`,{},e);this.$http.isError(s)||(this.$store.dispatch("quests/updateQuest",s),this.$bs.hideModal("editQuest"))}}}}),De={class:"row row-cols-md-auto g-2 align-items-center mb-3"},Oe={class:"col-12"},Te={class:"input-group input-group-sm"},Ee={class:"col-12"},Se={class:"input-group input-group-sm"},je=t("option",{value:"",disabled:""}," Select a member ",-1),Ve=["value"],Be={class:"col-12"},Re={class:"col-12"},We=t("i",{class:"fas fa-minus fa-xs"},null,-1),Ne={key:1,class:"col-12"},Ge=t("i",{class:"fas fa-times fa-xs"},null,-1),Je={key:2,class:"col-12"},ze=["disabled"];function He(e,s,a,d,h,y){const l=A("bs-tooltip");return i(),o("div",De,[t("div",Oe,[t("div",Te,[g(t("input",{"onUpdate:modelValue":s[0]||(s[0]=r=>e.addUsername=r),class:"form-control",type:"text",placeholder:"username...",maxlength:"18",onKeyup:s[1]||(s[1]=N(r=>e.addToParty(r),["enter"]))},null,544),[[W,e.addUsername]]),g((i(),o("button",{class:"btn btn-outline-info",onClick:s[2]||(s[2]=r=>e.addToParty(r))},[m(" Add ")])),[[l,"add user to party"]])])]),t("div",Ee,[t("div",Se,[g(t("select",{"onUpdate:modelValue":s[3]||(s[3]=r=>e.dropdownUserId=r),class:"form-select"},[je,(i(!0),o(k,null,M(e.party.members,r=>(i(),o(k,{key:r.id},[r.id!==e.loggedInUser.id?(i(),o("option",{key:0,value:r.id},f(r.username),9,Ve)):c("",!0)],64))),128))],512),[[G,e.dropdownUserId]]),g((i(),o("button",{class:"btn btn-outline-info",onClick:s[4]||(s[4]=r=>e.transferPartyLeader(r))},[m(" Lead ")])),[[l,"change party leader"]]),g((i(),o("button",{class:"btn btn-outline-info",onClick:s[5]||(s[5]=r=>e.kickPartyMember(r))},[m(" Kick ")])),[[l,"kick party member"]])])]),e.status==="open"?(i(),o(k,{key:0},[t("div",Be,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[6]||(s[6]=q(r=>e.togglePartyLock(r),["prevent"]))},[m(f(e.party.lock?"Unlock":"Lock")+" ",1),t("i",{class:Q(["fas",e.party.lock?"fa-unlock":"fa-lock"])},null,2)])]),t("div",Re,[t("button",{class:"btn btn-sm btn-outline-danger w-100",onClick:s[7]||(s[7]=q(r=>e.deleteParty(r),["prevent"]))},[m(" Delete "),We])])],64)):c("",!0),e.status==="wip"?(i(),o("div",Ne,[t("button",{class:"btn btn-sm btn-outline-danger w-100",onClick:s[8]||(s[8]=q(r=>e.dropQuest(r),["prevent"]))},[m(" Drop quest "),Ge])])):e.quest.status==="open"&&e.party.rank>=e.quest.minRank&&e.party.members.length>=e.quest.minParty&&e.party.members.length<=e.quest.maxParty?(i(),o("div",Je,[t("button",{class:"btn btn-sm btn-outline-success w-100",disabled:!e.enoughPoints,onClick:s[9]||(s[9]=q(r=>e.acceptQuest(r),["prevent"]))},[m(f(e.price?`Accept quest for ${e.price} ${e.price==1?"point":"points"} from each party member`:"Accept Quest")+" ",1),t("i",{class:Q(["fas small",e.price?"fa-coins":"fa-check"])},null,2)],8,ze)])):c("",!0)])}const Ke=_(Ce,[["render",He]]);var P=(e=>(e.Open="open",e.WIP="wip",e.Done="done",e.Pending="pending",e.Rejected="rejected",e.Hidden="hidden",e.Scheduled="scheduled",e))(P||{});const U=b({props:{party:{type:Object,default:null},quest:{type:Object,default:null}},computed:{...v(["loggedInUser"]),isWip(){var e;return((e=this.quest)==null?void 0:e.status)==P.WIP},isOpen(){var e;return((e=this.quest)==null?void 0:e.status)==P.Open},isDone(){var e;return((e=this.quest)==null?void 0:e.status)==P.Done},isLeader(){var e;return((e=this.party)==null?void 0:e.leader.id)==this.loggedInUser.id}}}),Ye=b({mixins:[U],props:{party:{type:Object,required:!0}}}),Xe={class:"mx-1"},Ze={key:0,class:"fas fa-lock fa-sm"},xe={key:1,class:"fas fa-unlock fa-sm"};function es(e,s,a,d,h,y){const l=A("bs-tooltip");return i(),o("span",Xe,[e.party.lock?g((i(),o("i",Ze,null,512)),[[l,"party is locked"]]):g((i(),o("i",xe,null,512)),[[l,"party is open"]])])}const ss=_(Ye,[["render",es]]),ts=b({name:"PartyTitle",components:{LockDetail:ss},mixins:[U],props:{party:{type:Object,required:!0},quest:{type:Object,required:!0},memberOfAnyParty:Boolean},computed:{...v(["loggedInUser"]),inCurrentParty(){return this.party.members.some(e=>e.id===this.loggedInUser.id)}},methods:{async joinParty(e){const s=await this.$http.executePost(`/parties/${this.party.id}/add`,{},e);this.$http.isError(s)||(this.$store.dispatch("quests/updateParty",s),this.$store.dispatch("updateToastMessages",{message:"Joined party",type:"success"}))},async leaveParty(e){if(confirm(`Are you sure? ${this.party.members.length==this.quest.minParty&&this.isWip?"This party has the minimum required members to run the quest, so leaving will cause the quest to be dropped.":""}`)){const s=await this.$http.executePost(`/parties/${this.party.id}/leave`,{},e);this.$http.isError(s)||(this.$store.dispatch("quests/updateParty",s),this.isWip&&(s.members.length<this.quest.minParty||s.rank<this.quest.minRank)&&this.dropQuest(e))}},async dropQuest(e){const s=await this.$http.executePost(`/quests/${this.quest.id}/drop`,{},e);this.$http.isError(s)||(this.$store.dispatch("quests/setQuests",s),this.$bs.hideModal("editQuest"))}}}),is={class:"row"},os={class:"col-sm"},rs={class:"d-inline-block"},as=t("i",{class:"fas fa-user-plus fa-xs"},null,-1),ns=t("i",{class:"fas fa-user-minus fa-xs"},null,-1);function ds(e,s,a,d,h,y){const l=u("user-link"),r=u("lock-detail"),n=A("bs-tooltip");return i(),o("div",is,[t("div",os,[t("h5",rs,[p(l,{user:e.party.leader},null,8,["user"]),m("'s party ")]),e.party.rank>0?g((i(),o("i",{key:0,class:Q(["fas fa-crown fa-sm mx-1","text-rank-"+e.party.rank])},null,2)),[[n,`rank ${e.party.rank} party`]]):c("",!0),e.isOpen?(i(),w(r,{key:1,party:e.party},null,8,["party"])):c("",!0),e.loggedInUser.id!=e.party.leader.id?(i(),o(k,{key:2},[!e.memberOfAnyParty&&!e.party.lock&&e.isOpen?(i(),o("button",{key:0,class:"btn btn-sm btn-outline-info ms-1",onClick:s[0]||(s[0]=q($=>e.joinParty($),["prevent"]))},[m(" Join "),as])):c("",!0),e.inCurrentParty&&(e.isOpen||e.isWip)?(i(),o("button",{key:1,class:"btn btn-sm btn-outline-danger ms-1",onClick:s[1]||(s[1]=q($=>e.leaveParty($),["prevent"]))},[m(" Leave "),ns])):c("",!0)],64)):c("",!0)])])}const ls=_(ts,[["render",ds]]),us=b({props:{quest:{type:Object,required:!0}},computed:{timeRemaining(){if(!this.quest.deadline)return 0;const e=new Date().getTime(),s=new Date(this.quest.deadline).getTime()-e;return Math.floor(s/(1e3*60*60*24))}}}),ps={class:"row"},cs={class:"col-sm"},ms={key:0,class:"ms-3"},hs={class:"text-secondary"},fs={key:1},ys={class:"ms-3"},$s={class:"text-secondary"},bs={class:"ms-3"};function _s(e,s,a,d,h,y){return i(),o("div",ps,[t("div",cs,[e.quest.status==="done"?(i(),o("div",ms,[m(" Completed: "),t("span",hs,f(e.quest.completed.toString().slice(0,10)),1)])):c("",!0),e.quest.status==="wip"?(i(),o("div",fs,[t("div",ys,[m(" Deadline: "),t("span",$s,f(e.quest.deadline.toString().slice(0,10)),1)]),t("div",bs,[m(" Time remaining: "),t("span",{class:Q(e.timeRemaining>0?"text-secondary":"text-danger")},f(e.timeRemaining)+" days",3)])])):c("",!0)])])}const gs=_(us,[["render",_s]]),qs=b({props:{members:{type:Array,required:!0},price:{type:Number,required:!0},status:{type:String,required:!0}}}),vs={class:"ms-3 mt-1"},ks={class:"mb-0"},Qs={key:1,class:"text-danger"};function ws(e,s,a,d,h,y){const l=u("user-link"),r=A("bs-tooltip");return i(),o("div",vs,[t("b",null," Members: ("+f(e.members.length)+") ",1),t("ul",ks,[(i(!0),o(k,null,M(e.members,n=>(i(),o("li",{key:n.id},[p(l,{class:"me-1",user:n},null,8,["user"]),n.rank>0?g((i(),o("i",{key:0,class:Q(["fas fa-crown","text-rank-"+n.rank])},null,2)),[[r,`rank ${n.rank} user`]]):c("",!0),e.status=="open"&&n.availablePoints<e.price?(i(),o("span",Qs,f(`(${n.availablePoints} points available)`),1)):c("",!0)]))),128))])])}const Ps=_(qs,[["render",ws]]),Is=b({props:{members:{type:Array,required:!0},price:{type:Number,required:!0},partyId:{type:String,required:!0},leaderId:{type:String,required:!0}},computed:{...v(["loggedInUser"])},methods:{async addToParty(e){const s=await this.$http.executePost(`/parties/${this.partyId}/add`,{user:null},e);this.$http.isError(s)||(this.$store.dispatch("quests/updateParty",s),this.$store.dispatch("updateToastMessages",{message:"Joined party",type:"success"}))},async removeFromPendingMembers(e,s){s.target.classList.add("fake-button-disable");const a=await this.$http.executePost(`/parties/${this.partyId}/removeFromPendingMembers`,{userId:e},s);this.$http.isError(a)||(this.$store.dispatch("quests/updateParty",a),this.$store.dispatch("updateToastMessages",{message:"Removed user from pending members",type:"success"})),s.target.classList.remove("fake-button-disable")}}}),Ms={class:"ms-3 mt-1"},As={class:"small text-secondary"},Ls={class:"mb-0"},Us=["onClick"],Fs=t("i",{class:"fas text-danger fa-times"},null,-1),Cs=[Fs],Ds={key:2,class:"text-danger small"};function Os(e,s,a,d,h,y){const l=u("user-link"),r=A("bs-tooltip");return i(),o("div",Ms,[t("b",null," Pending members: ("+f(e.members.length)+") ",1),t("div",As,f(e.members.length==1?"This user needs ":"These users need")+" to confirm before they're able to join the party. If you're the party leader, link this page to the "+f(e.members.length==1?"user ":"users")+" below! ",1),t("ul",Ls,[(i(!0),o(k,null,M(e.members,n=>(i(),o("li",{key:n.id},[e.leaderId==e.loggedInUser.id?g((i(),o("a",{key:0,class:"me-1",href:"#",onClick:q($=>e.removeFromPendingMembers(n.id,$),["stop","prevent"])},Cs,8,Us)),[[r,"remove user from pending members"]]):c("",!0),p(l,{class:"me-1",user:n},null,8,["user"]),n.rank>0?g((i(),o("i",{key:1,class:Q(["fas fa-crown","text-rank-"+n.rank])},null,2)),[[r,`rank ${n.rank} user`]]):c("",!0),n.availablePoints<e.price?(i(),o("span",Ds,f(`${n.availablePoints} points available. If this user joins, available points will be taken from other party members`),1)):c("",!0),e.loggedInUser.id==n.id?(i(),o("button",{key:3,class:"btn btn-sm btn-outline-success ms-1",onClick:s[0]||(s[0]=$=>e.addToParty($))},[m(" Join quest "),t("i",{class:Q(["fas small",e.price?"fa-coins":"fa-check"])},null,2)])):c("",!0)]))),128))])])}const Ts=_(Is,[["render",Os]]),Es=b({components:{ModesIcons:J},props:{party:{type:Object,required:!0},questId:{type:String,required:!0}},methods:{async togglePartyMode(e){const s=await this.$http.executePost(`/parties/${this.party.id}/toggleMode`,{mode:e});this.$http.isError(s)||this.$store.dispatch("quests/updateParty",s)}}}),Ss={class:"ms-3 mt-1"},js=t("b",{class:"me-1"},"Modes:",-1);function Vs(e,s,a,d,h,y){var r;const l=u("modes-icons");return i(),o("div",Ss,[js,p(l,{modes:e.party.modes,color:"secondary",toggler:e.party.leader.id==((r=e.$store.state.loggedInUser)==null?void 0:r.id),onToggle:s[0]||(s[0]=n=>e.togglePartyMode(n))},null,8,["modes","toggler"])])}const Bs=_(Es,[["render",Vs]]),Rs=b({name:"PartyDetail",components:{LeaderActions:Ke,PartyTitle:ls,QuestTiming:gs,MembersDetail:Ps,PendingMembersDetail:Ts,ModeDetail:Bs},mixins:[U],props:{party:{type:Object,default:null},quest:{type:Object,required:!0},memberOfAnyParty:Boolean},computed:{...v(["loggedInUser"])}}),Ws={class:"container card card-body mt-1"};function Ns(e,s,a,d,h,y){const l=u("leader-actions"),r=u("party-title"),n=u("quest-timing"),$=u("mode-detail"),L=u("members-detail"),F=u("pending-members-detail");return i(),o("div",Ws,[e.isOpen||e.isWip?(i(),o(k,{key:0},[e.party.leader.id==e.loggedInUser.id||e.loggedInUser.osuId==3178418?(i(),w(l,{key:0,party:e.party,status:e.quest.status,quest:e.quest,price:e.quest.price},null,8,["party","status","quest","price"])):c("",!0),p(r,{party:e.party,quest:e.quest,"member-of-any-party":e.memberOfAnyParty},null,8,["party","quest","member-of-any-party"])],64)):c("",!0),e.isDone||e.isWip?(i(),w(n,{key:1,quest:e.quest},null,8,["quest"])):c("",!0),e.isOpen?(i(),w($,{key:2,party:e.party,"quest-id":e.quest.id},null,8,["party","quest-id"])):c("",!0),p(L,{members:e.party.members,price:e.quest.price,status:e.quest.status},null,8,["members","price","status"]),e.party.pendingMembers&&e.party.pendingMembers.length&&!e.isDone?(i(),w(F,{key:3,members:e.party.pendingMembers,price:e.quest.price,"party-id":e.party.id,"leader-id":e.party.leader.id},null,8,["members","price","party-id","leader-id"])):c("",!0)])}const Gs=_(Rs,[["render",Ns]]),Js=b({components:{PartyDetail:Gs,AssociatedBeatmaps:oe},mixins:[U],props:{quest:{type:Object,required:!0},memberOfAnyParty:Boolean,collapse:Boolean},methods:{async createParty(e){const s=await this.$http.executePost("/parties/create",{questId:this.quest.id},e);this.$http.isError(s)||this.$store.dispatch("quests/updateQuest",s)}}}),zs={class:"container"},Hs={key:0,class:"row"},Ks={class:"col"},Ys=t("i",{class:"fas fa-plus fa-xs"},null,-1),Xs={class:"col-sm-12"},Zs={key:0,class:"col-sm-12 mt-2"};function xs(e,s,a,d,h,y){const l=u("party-detail"),r=u("associated-beatmaps");return i(),o("div",zs,[e.isOpen&&!e.memberOfAnyParty?(i(),o("div",Hs,[t("div",Ks,[t("button",{class:"btn btn-sm w-100 btn-outline-info mb-2",onClick:s[0]||(s[0]=q(n=>e.createParty(n),["prevent"]))},[m(" Add party "),Ys])])])):c("",!0),(i(!0),o(k,null,M(e.quest.parties,n=>(i(),o("div",{key:n.id,class:"row"},[t("div",Xs,[p(l,{party:n,quest:e.quest,"member-of-any-party":e.memberOfAnyParty},null,8,["party","quest","member-of-any-party"])]),e.isDone||e.isWip?(i(),o("div",Zs,[p(r,{"associated-maps":e.quest.associatedMaps},null,8,["associated-maps"])])):c("",!0)]))),128))])}const et=_(Js,[["render",xs]]),st=b({name:"ExpirationDate",props:{isExpired:{type:Boolean,required:!0},expiration:{type:Date,required:!0}}}),tt={class:"small"},it={class:"text-secondary"};function ot(e,s,a,d,h,y){return i(),o("div",tt,[m(" Quest "+f(e.isExpired?"expired":"expires")+": ",1),t("span",it,f(e.expiration.toLocaleDateString()),1)])}const rt=_(st,[["render",ot]]),at=b({name:"ReopenQuest",props:{questId:{type:String,required:!0},status:{type:String,required:!0},price:{type:Number,required:!0}},computed:{...v(["loggedInUser"]),enoughPoints(){return this.loggedInUser.availablePoints-this.price>0}},methods:{async reopenQuest(e){if(confirm(`Are you sure?

You are about to spend ${this.price} Mappers' Guild points to re-open this quest.

You have ${this.loggedInUser.availablePoints} points available.`)){const s=await this.$http.executePost(`/quests/${this.questId}/reopen`,{status:this.status},e);this.$http.isError(s)||(this.$store.dispatch("quests/setQuests",s.quests),this.$store.commit("setAvailablePoints",s.availablePoints),this.$bs.hideModal("editQuest"))}}}}),nt={class:"row"},dt={class:"col-sm-12"},lt=["disabled"],ut=t("i",{class:"fas fa-coins fa-xs"},null,-1);function pt(e,s,a,d,h,y){return i(),o("div",nt,[t("div",dt,[t("button",{class:"btn btn-sm w-100 btn-outline-success mb-2",disabled:!e.enoughPoints,onClick:s[0]||(s[0]=q(l=>e.reopenQuest(l),["prevent"]))},[m(" Re-open quest for "+f(e.price)+" points ",1),ut],8,lt)])])}const ct=_(at,[["render",pt]]),mt=b({name:"QuestInfoModal",components:{QuestSize:z,QuestPrice:H,QuestTime:K,QuestModes:Y,PartyInfo:et,ModalDialog:re,ExpirationDate:rt,ReopenQuest:ct},computed:{...v(["loggedInUser"]),...E("quests",["selectedQuest"]),memberOfAnyParty(){return this.selectedQuest.parties.some(e=>e.members.some(s=>s.id===this.loggedInUser.id))},headerClass(){var e;return(e=this.selectedQuest)!=null&&e.creator?this.selectedQuest.creator.username=="pishifat"?"bg-warning":"bg-primary":""}}});const ht=e=>(X("data-v-401d6d51"),e=e(),Z(),e),ft=["href"],yt={key:0},$t={key:1,class:"small"},bt=["href"],_t={class:"container"},gt={class:"row"},qt={class:"col-sm-12 text-center"},vt={key:0},kt=["href"],Qt=["src"],wt={key:1},Pt=["src"],It={class:"row mb-3 text-center"},Mt={class:"col-sm-12"},At={class:"col-sm-12 text-secondary"},Lt={class:"row justify-content-center text-center"},Ut={class:"col-sm-12"},Ft={class:"col-sm-6 col-lg-2"},Ct={class:"col-sm-6 col-lg-2"},Dt={class:"col-sm-6 col-lg-4"},Ot={key:0,class:"col-sm-6 col-lg-3"},Tt=ht(()=>t("div",{class:"radial-divisor"},null,-1));function Et(e,s,a,d,h,y){const l=u("user-link"),r=u("quest-size"),n=u("quest-price"),$=u("quest-time"),L=u("quest-modes"),F=u("expiration-date"),S=u("reopen-quest"),j=u("party-info"),V=u("modal-dialog");return i(),w(V,{id:"editQuest","header-class":e.headerClass,loaded:!!e.selectedQuest},{header:I(()=>[t("a",{href:`/quests?id=${e.selectedQuest.id}`,target:"_blank",class:"text-dark"},f(e.selectedQuest.name),9,ft),e.selectedQuest.creator.username!="pishifat"?(i(),o("span",yt,[m(" created by "),p(l,{class:"text-dark",user:e.selectedQuest.creator},null,8,["user"])])):c("",!0),e.selectedQuest.art?(i(),o("div",$t,[t("a",{href:"https://osu.ppy.sh/beatmaps/artists/"+e.selectedQuest.art,target:"_blank"}," View featured artist listing ",8,bt)])):c("",!0)]),default:I(()=>[t("div",_t,[t("div",gt,[t("div",qt,[e.selectedQuest.art?(i(),o("span",vt,[t("a",{href:"https://osu.ppy.sh/beatmaps/artists/"+e.selectedQuest.art,target:"_blank"},[t("img",{src:"https://assets.ppy.sh/artists/"+e.selectedQuest.art+"/cover.jpg",class:"card-avatar-img-modal"},null,8,Qt)],8,kt)])):(i(),o("span",wt,[t("img",{src:e.selectedQuest.isMbc?"/images/mbc-icon.png":"/images/no-art-icon.png",class:"card-avatar-img-modal"},null,8,Pt)]))])]),t("div",It,[t("div",Mt,[t("h5",null,f(e.selectedQuest.name),1)]),t("div",At,f(e.selectedQuest.descriptionMain),1)]),t("div",Lt,[t("div",Ut,[p(r,{quest:e.selectedQuest},null,8,["quest"])]),t("div",Ft,[p(n,{price:e.selectedQuest.price},null,8,["price"])]),t("div",Ct,[p($,{timeframe:e.selectedQuest.timeframe},null,8,["timeframe"])]),t("div",Dt,[p(L,{status:e.selectedQuest.status,modes:e.selectedQuest.modes},null,8,["status","modes"])]),e.selectedQuest.expiration?(i(),o("div",Ot,[p(F,{"is-expired":e.selectedQuest.isExpired,expiration:new Date(e.selectedQuest.expiration)},null,8,["is-expired","expiration"])])):c("",!0)]),Tt,e.selectedQuest.isExpired?(i(),w(S,{key:0,"quest-id":e.selectedQuest.id,status:e.selectedQuest.status,price:e.selectedQuest.reopenPrice},null,8,["quest-id","status","price"])):(i(),w(j,{key:1,quest:e.selectedQuest,"member-of-any-party":e.memberOfAnyParty},null,8,["quest","member-of-any-party"]))])]),_:1},8,["header-class","loaded"])}const St=_(mt,[["render",Et],["__scopeId","data-v-401d6d51"]]),jt=b({name:"QuestInformation",components:{ExampleQuest:x},computed:{...v("quests",["exampleQuest"])}}),Vt={class:"container card card-body py-3 mb-2"},Bt=t("i",{class:"fas fa-angle-down"},null,-1),Rt={id:"questInformation",class:"collapse ms-4"},Wt=t("div",{class:"small text-secondary"}," Quests reward mappers for following certain requirements when creating their Featured Artist maps. Most quests involve creating and ranking a certain number of beatmaps for a specific Featured Artist, and new quests are added weekly. ",-1),Nt=t("hr",null,null,-1),Gt=t("div",{class:"small text-secondary mt-2"}," To begin a quest, a party must claim it. Only one party can run a quest per mode. ",-1),Jt=t("div",{class:"small text-secondary mt-2"}," If a quest is not claimed within 90 days, it expires. To re-open an expired quest, a user must spend some of their available points. ",-1),zt=t("div",{class:"small text-secondary mt-2"}," Here's a breakdown of this example quest: ",-1),Ht=t("i",{class:"fas fa-angle-down"},null,-1),Kt=t("div",{id:"questRewards",class:"collapse ms-4 small text-secondary"},[t("ul",null,[t("li",null,[t("b",null,"7 points"),m(" if a quest is completed on time.")]),t("li",null,[t("b",null,"+2 bonus points per difficulty on a ranked beatmap."),m(" This scales with length, so longer maps earn more points.")]),t("li",null,"If a beatmap is ranked after the quest's deadline, bonus points are adjusted as follows:"),t("ul",null,[t("li",null,"1.5 points for 0-20 days late"),t("li",null,"1 point for 21-40 days late"),t("li",null,"0.5 points for 40+ days late")])])],-1);function Yt(e,s,a,d,h,y){const l=u("example-quest");return i(),o("div",Vt,[t("a",{href:"#questInformation","data-bs-toggle":"collapse",onClick:s[0]||(s[0]=q(()=>{},["prevent"]))},[m(" How do quests work? "),Bt]),t("div",Rt,[Wt,Nt,Gt,Jt,zt,p(l,{quest:e.exampleQuest},null,8,["quest"])]),t("a",{href:"#questRewards","data-bs-toggle":"collapse",onClick:s[1]||(s[1]=q(()=>{},["prevent"]))},[m(" What are the rewards for completing a quest? "),Ht]),Kt])}const Xt=_(jt,[["render",Yt]]),Zt={updateQuest({commit:e},s){e("updateQuest",s)},updateParty({commit:e},s){e("updateParty",s)},setQuests({commit:e},s){e("setQuests",s)},updateFilterValue({commit:e},s){e("setFilterValue",s)},updateFilterMode({commit:e},s){e("setFilterMode",s)},updateFilterArtist({commit:e},s){e("setFilterArtist",s)},async loadQuests({commit:e,rootState:s},a){var l;const d=(l=s.loggedInUser)==null?void 0:l.mainMode;let h=`/quests/search?mode=${d}&limit=100`;a&&(h+=`&id=${a}`);const y=await C.initialRequest(h);D(y)||(e("setQuests",y),e("setFilterMode",d),e("setIsLoadingQuests",!1),a&&e("setSelectedQuestId",a))},async searchQuests({commit:e,state:s},a){e("setIsLoadingQuests",!0);let d=100;a&&(d=1e4,e("setFilterArtist",""));const h=await C.executeGet(`/quests/search?mode=${s.filterMode}&artist=${s.filterArtist}&limit=${d}`);D(h)||e("setQuests",h),e("setIsLoadingQuests",!1)}},xt={namespaced:!0,state:{quests:[],exampleQuest:null,filterValue:"",filterMode:O.any,filterArtist:"",isLoadingQuests:!0,selectedQuestId:null,isFirstLoadDone:!1},mutations:{setFirstLoadDone(e){e.isFirstLoadDone=!0},setQuests(e,s){e.quests=s},setFilterValue(e,s){e.filterValue=s},setFilterMode(e,s){e.filterMode=s},setFilterArtist(e,s){e.filterArtist=s},setExampleQuest(e,s){e.exampleQuest=s},setIsLoadingQuests(e,s){e.isLoadingQuests=s},setSelectedQuestId(e,s){e.selectedQuestId=s},updateQuest(e,s){const a=e.quests.findIndex(d=>d.id===s.id);a!==-1&&(e.quests[a]=s)},updateParty(e,s){const a=e.quests.findIndex(d=>d.id===e.selectedQuestId);if(a!==-1){const d=e.quests[a].parties.findIndex(h=>h.id===s.id);d!==-1&&(e.quests[a].parties[d]=s)}}},getters:{selectedQuest:e=>{if(e.selectedQuestId)return e.quests.find(s=>s.id===e.selectedQuestId)},filteredQuests:e=>{let s=e.quests;if(e.filterMode!==O.any){const a=e.filterMode;s=s.filter(d=>d.modes.includes(a))}return e.filterValue.length>2&&(s=s.filter(a=>a.name.toLowerCase().includes(e.filterValue.toLowerCase()))),s},openQuests:(e,s)=>s.filteredQuests.filter(a=>a.status==P.Open),wipQuests:(e,s)=>s.filteredQuests.filter(a=>a.status==P.WIP),completeQuests:(e,s)=>s.filteredQuests.filter(a=>a.status==P.Done)},actions:Zt},ei=xt,si=b({name:"QuestPage",components:{QuestPageFilters:qe,StatusQuests:Fe,SubmitQuestModal:ie,QuestInfoModal:St,QuestInformation:Xt},computed:{...v("quests",["isFirstLoadDone","isLoadingQuests","exampleQuest"]),...E("quests",["openQuests","wipQuests","completeQuests","expiredQuests"])},beforeCreate(){this.$store.hasModule("quests")||this.$store.registerModule("quests",ei)},async created(){const e=this.$route.query.id;await this.$store.dispatch("quests/loadQuests",e),e&&this.$bs.showModal("editQuest"),this.$store.commit("quests/setFirstLoadDone");const s=await this.$http.executeGet("/exampleQuest");this.$http.isError(s)||this.$store.commit("quests/setExampleQuest",s)}}),ti=t("div",{class:"radial-divisor"},null,-1),ii=t("div",{class:"radial-divisor"},null,-1);function oi(e,s,a,d,h,y){const l=u("quest-page-filters"),r=u("quest-information"),n=u("status-quests"),$=u("submit-quest-modal"),L=u("quest-info-modal");return i(),o("div",null,[p(l),p(r),p(n,{status:"Open",quests:e.openQuests},null,8,["quests"]),ti,p(n,{status:"Work-in-progress",quests:e.wipQuests},null,8,["quests"]),ii,p(n,{status:"Complete",quests:e.completeQuests},null,8,["quests"]),p($),p(L)])}const ci=_(si,[["render",oi]]);export{ci as default};
