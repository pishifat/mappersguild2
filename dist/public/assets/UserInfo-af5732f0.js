import{M as m}from"./ModalDialog-7acea419.js";import{C as g}from"./CopyPaste-726076bb.js";import{d as f,_ as b,o as c,c as M,w as d,i as n,a as t,b as i,v as w,t as a,f as r,e as $,k as y,z as v,j as C,q as l}from"./index-2397d10d.js";const I=f({name:"UserInfo",components:{ModalDialog:m,CopyPaste:g},props:{user:{type:Object,default:null},currentGroup:{type:String,default:""}},data(){return{badge:0,queuedBadge:0,discordId:"",group:"",coins:"",pin:"",sweater:"",additionalItems:"",legacyPoints:0}},watch:{user(){this.badge=this.user.badge||0,this.queuedBadge=this.user.queuedBadge||0,this.discordId=this.user.discordId||"",this.group=this.user.group||"",this.legacyPoints=this.user.legacyPoints||0}},created(){this.user&&(this.badge=this.user.badge||0,this.queuedBadge=this.user.badge||0,this.discordId=this.user.discordId||"",this.group=this.user.group||"",this.legacyPoints=this.user.legacyPoints||0)},methods:{async updateGroup(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateGroup`,{group:this.group},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set group to ${s}`,type:"info"}),this.$store.commit("updateGroup",{userId:this.user.id,group:s}))},async updateQueuedBadge(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateQueuedBadge`,{badge:this.queuedBadge},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set queued badge to ${s}`,type:"info"}),this.$store.commit("updateQueuedBadge",{userId:this.user.id,badge:s}))},async updateBadge(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateBadge`,{badge:this.badge},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set actual badge to ${s}`,type:"info"}),this.$store.commit("updateBadge",{userId:this.user.id,badge:s}))},async updateLegacyPoints(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateLegacyPoints`,{legacyPoints:this.legacyPoints},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set legacy points to ${s}`,type:"info"}),this.$store.commit("updateLegacyPoints",{userId:this.user.id,legacyPoints:s}))},async updateDiscordId(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateDiscordId`,{discordId:this.discordId},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set discord ID to ${s}`,type:"info"}),this.$store.commit("updateDiscordId",{userId:this.user.id,discordId:s}))},async calculateUserPoints(e){await this.$http.executePost(`/admin/users/${this.user.id}/calculateUserPoints`,{},e)&&this.$store.dispatch("updateToastMessages",{message:"calculated points",type:"info"})},async toggleIsShowcaseMapper(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsShowcaseMapper`,{isShowcaseMapper:!this.user.isShowcaseMapper},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isShowcaseMapper ${s.isShowcaseMapper}`,type:"info"}),this.$store.commit("updateIsShowcaseMapper",{userId:this.user.id,isShowcaseMapper:s.isShowcaseMapper}))},async toggleIsMentorshipAdmin(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsMentorshipAdmin`,{isMentorshipAdmin:!this.user.isMentorshipAdmin},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isMentorshipAdmin ${s.isMentorshipAdmin}`,type:"info"}),this.$store.commit("updateIsMentorshipAdmin",{userId:this.user.id,isMentorshipAdmin:s.isMentorshipAdmin}))},async toggleIsWorldCupHelper(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsWorldCupHelper`,{isWorldCupHelper:!this.user.isWorldCupHelper},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isWorldCupHelper ${s.isWorldCupHelper}`,type:"info"}),this.$store.commit("updateIsWorldCupHelper",{userId:this.user.id,isWorldCupHelper:s.isWorldCupHelper}))},async toggleHasMerchAccess(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleHasMerchAccess`,{hasMerchAccess:!this.user.hasMerchAccess},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set hasMerchAccess ${s.hasMerchAccess}`,type:"info"}),this.$store.commit("updateHasMerchAccess",{userId:this.user.id,hasMerchAccess:s.hasMerchAccess}))},async toggleHasSpecificMerchOrder(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleHasSpecificMerchOrder`,{hasSpecificMerchOrder:!this.user.hasSpecificMerchOrder},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set hasSpecificMerchOrder ${s.hasSpecificMerchOrder}`,type:"info"}),this.$store.commit("updateHasSpecificMerchOrder",{userId:this.user.id,hasSpecificMerchOrder:s.hasSpecificMerchOrder}))},async toggleWorldCupMerchActive(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleWorldCupMerchActive`,{active:!this.user.worldCupMerch.active},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set worldCupMerch.active ${s.worldCupMerch.active}`,type:"info"}),this.$store.commit("updateWorldCupMerch",{userId:this.user.id,worldCupMerch:s.worldCupMerch}))},async saveWorldCupMerch(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/saveWorldCupMerch`,{worldCupMerch:{coins:this.coins,pin:this.pin,sweater:this.sweater,additionalItems:this.additionalItems}},e);s&&(this.$store.dispatch("updateToastMessages",{message:"saved worldCupMerch",type:"info"}),this.$store.commit("updateWorldCupMerch",{userId:this.user.id,worldCupMerch:s.worldCupMerch}))}}}),P={class:"container"},S=t("h6",null," Groups/permissions ",-1),A={class:"row mb-2"},k=t("option",{value:"user"}," User ",-1),B=t("option",{value:"admin"}," Admin ",-1),H=t("option",{value:"secret"}," Secret ",-1),W=t("option",{value:"locus"}," Locus admin ",-1),U=[k,B,H,W],T={class:"row mb-2"},D={class:"col-sm-4"},O={class:"col-sm-4"},V={class:"col-sm-4"},q=t("h6",{class:"mt-4"}," Rewards ",-1),G={class:"mb-2"},_={class:"row mb-2"},L={class:"row mb-2"},Q={class:"row mb-2"},E=t("h6",{class:"mt-4"}," Merch ",-1),N={class:"row mb-2"},j={class:"col-sm-4"},z={class:"col-sm-4"},R={class:"col-sm-4"},F={key:0},J={class:"row"},K={class:"col-sm-6 row mb-2"},X=t("div",{class:"col-sm-5"}," coins: ",-1),Y={class:"col-sm-7"},Z=t("div",{class:"col-sm-5"}," pin: ",-1),x={class:"col-sm-7"},ss=t("div",{class:"col-sm-5"}," sweater: ",-1),es={class:"col-sm-7"},ts=t("div",{class:"col-sm-5"}," additionalItems: ",-1),os={class:"col-sm-7"},is=t("h6",{class:"mt-4"}," Other ",-1),as={class:"row mb-2"},rs={class:"ms-2 mb-2"},ds=t("i",{class:"fas fa-angle-down"},null,-1),ns={id:"debug",class:"collapse"};function ls(e,s,us,cs,ps,hs){const p=l("user-link"),u=l("copy-paste"),h=l("modal-dialog");return c(),M(h,{id:`editUser${e.currentGroup}`,"header-class":e.user?"bg-rank-"+e.user.rank:"",loaded:!!e.user},{header:d(()=>[n(p,{user:e.user},null,8,["user"])]),default:d(()=>[t("div",P,[S,t("div",A,[i(t("select",{"onUpdate:modelValue":s[0]||(s[0]=o=>e.group=o),class:"form-select form-select-sm w-50 mx-2"},U,512),[[w,e.group]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[1]||(s[1]=o=>e.updateGroup(o))}," Save group ")]),t("div",T,[t("div",D,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[2]||(s[2]=o=>e.toggleIsShowcaseMapper(o))},a(e.user.isShowcaseMapper?"Disable":"Enable")+" isShowcaseMapper ",1)]),t("div",O,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[3]||(s[3]=o=>e.toggleIsMentorshipAdmin(o))},a(e.user.isMentorshipAdmin?"Disable":"Enable")+" isMentorshipAdmin ",1)]),t("div",V,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[4]||(s[4]=o=>e.toggleIsWorldCupHelper(o))},a(e.user.isWorldCupHelper?"Disable":"Enable")+" isWorldCupHelper ",1)])]),q,t("div",G,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[5]||(s[5]=o=>e.calculateUserPoints(o))}," Calculate user points ")]),t("div",_,[i(t("input",{"onUpdate:modelValue":s[6]||(s[6]=o=>e.queuedBadge=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[r,e.queuedBadge]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[7]||(s[7]=o=>e.updateQueuedBadge(o))}," Queue badge ")]),t("div",L,[i(t("input",{"onUpdate:modelValue":s[8]||(s[8]=o=>e.badge=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[r,e.badge]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[9]||(s[9]=o=>e.updateBadge(o))}," Update actual badge ")]),t("div",Q,[i(t("input",{"onUpdate:modelValue":s[10]||(s[10]=o=>e.legacyPoints=o),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off"},null,512),[[r,e.legacyPoints]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[11]||(s[11]=o=>e.updateLegacyPoints(o))}," Update legacy points ")]),E,t("div",N,[t("div",j,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[12]||(s[12]=o=>e.toggleHasMerchAccess(o))}," hasMerchAccess: "+a(e.user.hasMerchAccess),1)]),t("div",z,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[13]||(s[13]=o=>e.toggleHasSpecificMerchOrder(o))}," hasSpecificMerchOrder: "+a(e.user.hasSpecificMerchOrder),1)]),t("div",R,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[14]||(s[14]=o=>e.toggleWorldCupMerchActive(o))}," worldCupMerch.active: "+a(e.user.worldCupMerch.active?"true":"false"),1)])]),e.user.worldCupMerch.active?(c(),$("div",F,[t("div",J,[t("div",K,[X,t("div",Y,[i(t("input",{"onUpdate:modelValue":s[15]||(s[15]=o=>e.coins=o),class:"form-control form-control-sm mx-2 mb-2",type:"text",placeholder:"comma separated years",autocomplete:"off"},null,512),[[r,e.coins]])]),Z,t("div",x,[i(t("input",{"onUpdate:modelValue":s[16]||(s[16]=o=>e.pin=o),class:"form-control form-control-sm mx-2 mb-2",type:"text",placeholder:"empty for false",autocomplete:"off"},null,512),[[r,e.pin]])]),ss,t("div",es,[i(t("input",{"onUpdate:modelValue":s[17]||(s[17]=o=>e.sweater=o),class:"form-control form-control-sm mx-2 mb-2",type:"number",placeholder:"year",autocomplete:"off"},null,512),[[r,e.sweater]])]),ts,t("div",os,[i(t("input",{"onUpdate:modelValue":s[18]||(s[18]=o=>e.additionalItems=o),class:"form-control form-control-sm mx-2 mb-2",type:"number",placeholder:"usually 0, possibly 1 or 2",autocomplete:"off"},null,512),[[r,e.additionalItems]])]),t("button",{class:"btn btn-sm btn-outline-info",onClick:s[19]||(s[19]=o=>e.saveWorldCupMerch(o))}," Save worldCupMerch ")]),n(u,{class:"col-sm-6"},{default:d(()=>[t("pre",null,a(e.user.worldCupMerch),1)]),_:1})])])):y("",!0),is,t("div",as,[i(t("input",{"onUpdate:modelValue":s[20]||(s[20]=o=>e.discordId=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[r,e.discordId]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[21]||(s[21]=o=>e.updateDiscordId(o))}," Save Discord ID ")]),t("div",rs,[t("a",{href:"#debug","data-bs-toggle":"collapse",onClick:s[22]||(s[22]=v(()=>{},["prevent"]))},[C(" Debug "),ds])]),t("div",ns,[n(u,null,{default:d(()=>[t("pre",null,a(e.user),1)]),_:1})])])]),_:1},8,["id","header-class","loaded"])}const bs=b(I,[["render",ls]]);export{bs as U};
