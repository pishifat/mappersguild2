import{M as h}from"./ModalDialog-c6ce403f.js";import{C as m}from"./CopyPaste-5f9f281c.js";import{d as g,_ as b,o as f,c as M,w as d,i as u,a as t,b as a,v as $,t as i,f as r,z as w,j as y,q as n}from"./index-c0588d7c.js";const I=g({name:"UserInfo",components:{ModalDialog:h,CopyPaste:m},props:{user:{type:Object,default:null},currentGroup:{type:String,default:""}},data(){return{badge:0,queuedBadge:0,discordId:"",group:"",coins:"",pin:"",sweater:"",additionalItems:"",legacyPoints:0}},watch:{user(){this.badge=this.user.badge||0,this.queuedBadge=this.user.queuedBadge||0,this.discordId=this.user.discordId||"",this.group=this.user.group||"",this.legacyPoints=this.user.legacyPoints||0}},created(){this.user&&(this.badge=this.user.badge||0,this.queuedBadge=this.user.badge||0,this.discordId=this.user.discordId||"",this.group=this.user.group||"",this.legacyPoints=this.user.legacyPoints||0)},methods:{async updateGroup(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateGroup`,{group:this.group},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set group to ${s}`,type:"info"}),this.$store.commit("updateGroup",{userId:this.user.id,group:s}))},async updateQueuedBadge(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateQueuedBadge`,{badge:this.queuedBadge},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set queued badge to ${s}`,type:"info"}),this.$store.commit("updateQueuedBadge",{userId:this.user.id,badge:s}))},async updateBadge(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateBadge`,{badge:this.badge},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set actual badge to ${s}`,type:"info"}),this.$store.commit("updateBadge",{userId:this.user.id,badge:s}))},async updateLegacyPoints(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateLegacyPoints`,{legacyPoints:this.legacyPoints},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set legacy points to ${s}`,type:"info"}),this.$store.commit("updateLegacyPoints",{userId:this.user.id,legacyPoints:s}))},async updateDiscordId(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateDiscordId`,{discordId:this.discordId},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set discord ID to ${s}`,type:"info"}),this.$store.commit("updateDiscordId",{userId:this.user.id,discordId:s}))},async calculateUserPoints(e){await this.$http.executePost(`/admin/users/${this.user.id}/calculateUserPoints`,{},e)&&this.$store.dispatch("updateToastMessages",{message:"calculated points",type:"info"})},async toggleIsShowcaseMapper(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsShowcaseMapper`,{isShowcaseMapper:!this.user.isShowcaseMapper},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isShowcaseMapper ${s.isShowcaseMapper}`,type:"info"}),this.$store.commit("updateIsShowcaseMapper",{userId:this.user.id,isShowcaseMapper:s.isShowcaseMapper}))},async toggleIsMentorshipAdmin(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsMentorshipAdmin`,{isMentorshipAdmin:!this.user.isMentorshipAdmin},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isMentorshipAdmin ${s.isMentorshipAdmin}`,type:"info"}),this.$store.commit("updateIsMentorshipAdmin",{userId:this.user.id,isMentorshipAdmin:s.isMentorshipAdmin}))},async toggleIsWorldCupHelper(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsWorldCupHelper`,{isWorldCupHelper:!this.user.isWorldCupHelper},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isWorldCupHelper ${s.isWorldCupHelper}`,type:"info"}),this.$store.commit("updateIsWorldCupHelper",{userId:this.user.id,isWorldCupHelper:s.isWorldCupHelper}))},async toggleHasMerchAccess(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleHasMerchAccess`,{hasMerchAccess:!this.user.hasMerchAccess},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set hasMerchAccess ${s.hasMerchAccess}`,type:"info"}),this.$store.commit("updateHasMerchAccess",{userId:this.user.id,hasMerchAccess:s.hasMerchAccess}))},async toggleHasSpecificMerchOrder(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleHasSpecificMerchOrder`,{hasSpecificMerchOrder:!this.user.hasSpecificMerchOrder},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set hasSpecificMerchOrder ${s.hasSpecificMerchOrder}`,type:"info"}),this.$store.commit("updateHasSpecificMerchOrder",{userId:this.user.id,hasSpecificMerchOrder:s.hasSpecificMerchOrder}))}}}),C={class:"container"},S=t("h6",null," Groups/permissions ",-1),P={class:"row mb-2"},v=t("option",{value:"user"}," User ",-1),A=t("option",{value:"admin"}," Admin ",-1),H=t("option",{value:"secret"}," Secret ",-1),B=t("option",{value:"locus"}," Locus admin ",-1),k=[v,A,H,B],U={class:"row mb-2"},D={class:"col-sm-4"},O={class:"col-sm-4"},T={class:"col-sm-4"},W=t("h6",{class:"mt-4"}," Rewards ",-1),q={class:"mb-2"},V={class:"row mb-2"},G={class:"row mb-2"},_={class:"row mb-2"},L=t("h6",{class:"mt-4"}," Merch ",-1),Q={class:"row mb-2"},E={class:"col-sm-4"},N={class:"col-sm-4"},j=t("h6",{class:"mt-4"}," Other ",-1),z={class:"row mb-2"},R={class:"ms-2 mb-2"},F=t("i",{class:"fas fa-angle-down"},null,-1),J={id:"debug",class:"collapse"};function K(e,s,X,Y,Z,x){const p=n("user-link"),c=n("copy-paste"),l=n("modal-dialog");return f(),M(l,{id:`editUser${e.currentGroup}`,"header-class":e.user?"bg-rank-"+e.user.rank:"",loaded:!!e.user},{header:d(()=>[u(p,{user:e.user},null,8,["user"])]),default:d(()=>[t("div",C,[S,t("div",P,[a(t("select",{"onUpdate:modelValue":s[0]||(s[0]=o=>e.group=o),class:"form-select form-select-sm w-50 mx-2"},k,512),[[$,e.group]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[1]||(s[1]=o=>e.updateGroup(o))}," Save group ")]),t("div",U,[t("div",D,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[2]||(s[2]=o=>e.toggleIsShowcaseMapper(o))},i(e.user.isShowcaseMapper?"Disable":"Enable")+" isShowcaseMapper ",1)]),t("div",O,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[3]||(s[3]=o=>e.toggleIsMentorshipAdmin(o))},i(e.user.isMentorshipAdmin?"Disable":"Enable")+" isMentorshipAdmin ",1)]),t("div",T,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[4]||(s[4]=o=>e.toggleIsWorldCupHelper(o))},i(e.user.isWorldCupHelper?"Disable":"Enable")+" isWorldCupHelper ",1)])]),W,t("div",q,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[5]||(s[5]=o=>e.calculateUserPoints(o))}," Calculate user points ")]),t("div",V,[a(t("input",{"onUpdate:modelValue":s[6]||(s[6]=o=>e.queuedBadge=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[r,e.queuedBadge]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[7]||(s[7]=o=>e.updateQueuedBadge(o))}," Queue badge ")]),t("div",G,[a(t("input",{"onUpdate:modelValue":s[8]||(s[8]=o=>e.badge=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[r,e.badge]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[9]||(s[9]=o=>e.updateBadge(o))}," Update actual badge ")]),t("div",_,[a(t("input",{"onUpdate:modelValue":s[10]||(s[10]=o=>e.legacyPoints=o),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off"},null,512),[[r,e.legacyPoints]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[11]||(s[11]=o=>e.updateLegacyPoints(o))}," Update legacy points ")]),L,t("div",Q,[t("div",E,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[12]||(s[12]=o=>e.toggleHasMerchAccess(o))}," hasMerchAccess: "+i(e.user.hasMerchAccess),1)]),t("div",N,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[13]||(s[13]=o=>e.toggleHasSpecificMerchOrder(o))}," hasSpecificMerchOrder: "+i(e.user.hasSpecificMerchOrder),1)])]),j,t("div",z,[a(t("input",{"onUpdate:modelValue":s[14]||(s[14]=o=>e.discordId=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[r,e.discordId]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[15]||(s[15]=o=>e.updateDiscordId(o))}," Save Discord ID ")]),t("div",R,[t("a",{href:"#debug","data-bs-toggle":"collapse",onClick:s[16]||(s[16]=w(()=>{},["prevent"]))},[y(" Debug "),F])]),t("div",J,[u(c,null,{default:d(()=>[t("pre",null,i(e.user),1)]),_:1})])])]),_:1},8,["id","header-class","loaded"])}const os=b(I,[["render",K]]);export{os as U};
